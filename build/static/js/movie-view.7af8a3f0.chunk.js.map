{"version":3,"sources":["service/API/API.js","components/MovieList/Movielist.js","views/MoviesPage/Searchbar.module.css","views/MoviesPage/SearchForm.module.css","views/MoviesPage/MoviesPage.js"],"names":["BASE_URL","KEY","Trending","Axios","get","Search","movieName","Details","movieId","CastApi","ReviewsApi","MovieList","movie","location","map","id","title","release_date","to","pathname","state","from","module","exports","MoviesPage","handleNameChange","e","setState","currentTarget","value","toLowerCase","console","log","sessionStorage","getItem","parsedMovie","JSON","parse","this","prevProps","prevState","localStorage","setItem","stringify","API","response","data","results","preventDefault","trim","toast","error","handleSubmit","props","className","s","Searchbar","f","SearchForm","type","SearchFormButton","onSubmit","SearchFormButtonLabel","SearchFormInput","autoFocus","placeholder","onChange","Component"],"mappings":"qJAAA,+LAEMA,EAAW,gCACXC,EAAM,mCACCC,EAAU,kBAAIC,IAAMC,IAAN,UAAcJ,EAAd,sCAAoDC,KAClEI,EAAO,SAACC,GAAD,OAAaH,IAAMC,IAAN,UAAaJ,EAAb,gCAA6CC,EAA7C,kBAA0DK,KAC9EC,EAAQ,SAACC,GAAD,OAAWL,IAAMC,IAAN,UAAcJ,EAAd,iBAA+BQ,EAA/B,oBAAkDP,KACrEQ,EAAU,SAACD,GAAD,OAAaL,IAAMC,IAAN,UAAaJ,EAAb,iBAA8BQ,EAA9B,4BAAyDP,KAChFS,EAAa,SAACF,GAAD,OAAaL,IAAMC,IAAN,UAAaJ,EAAb,iBAA8BQ,EAA9B,4BAAyDP,M,2FCUjFU,EAdG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAC1B,OAAU,6BACUD,EAAME,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAMC,EAAX,EAAWA,aAAX,OACP,6BACI,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYJ,GACpBK,MAAO,CACPC,KAAKR,IAHT,UAKIG,EAAOC,MANNF,U,mBCNjCO,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,iBAAmB,qCAAqC,sBAAwB,0CAA0C,gBAAkB,sC,oNCuF3LC,E,4MA9EVJ,MAAQ,CACJd,UAAW,IACXM,MAAM,I,EA0BXa,iBAAmB,SAAAC,GACX,EAAKC,SAAS,CAAErB,UAAWoB,EAAEE,cAAcC,MAAMC,iB,kEAxBrDC,QAAQC,IAAI,yBACZ,IAAMpB,EAAQqB,eAAeC,QAAQ,aAC/BC,EAAcC,KAAKC,MAAMzB,GAE3BuB,IACFJ,QAAQC,IAAI,+BACNM,KAAKX,SAAS,CAAErB,UAAU6B,O,kFAKbI,EAAWC,G,8EAChCT,QAAQC,IAAI,0BAERM,KAAKlB,MAAMd,YAAckC,EAAUlC,WAEtCmC,aAAaC,QAAQ,YAAaN,KAAKO,UAAUL,KAAKlB,MAAMd,Y,SAGtCsC,IAAWN,KAAKlB,MAAMd,W,OAAvCuC,E,OACNP,KAAKX,SAAS,CAACf,MAAMiC,EAASC,KAAKC,U,qLAOpBrB,G,oEACfA,EAAEsB,iBAEkC,KAAhCV,KAAKlB,MAAMd,UAAU2C,O,gCACfC,IAAMC,MAAM,kH,wCAGvBb,KAAKX,SAAS,CAAErB,UAAWoB,EAAEE,cAAcC,MAAMC,gB,sIAI1C,IAAD,EACuBQ,KAAKlB,MAAzBR,EADH,EACGA,MAAON,EADV,EACUA,UACP8C,EAAmCd,KAAnCc,aAAc3B,EAAqBa,KAArBb,iBACdZ,EAAayB,KAAKe,MAAlBxC,SACR,OACF,qCACM,wBAAQyC,UAAWC,IAAEC,UAArB,SACI,uBAAMF,UAAWG,IAAEC,WAAnB,UAGI,wBAAQC,KAAK,SAASL,UAAWG,IAAEG,iBAAkBC,SAAUT,EAA/D,SACI,sBAAME,UAAWG,IAAEK,sBAAnB,sBAGJ,uBACIR,UAAWG,IAAEM,gBACbJ,KAAK,OAENK,WAAS,EACTnC,MAAOvB,EACP2D,YAAY,eACZC,SAAUzC,SAMhBb,EACG,cAACD,EAAA,EAAD,CAAWC,MAAOA,EAAOC,SAAUA,IACrC,8K,GA1EOsD","file":"static/js/movie-view.7af8a3f0.chunk.js","sourcesContent":["import Axios from 'axios';\n \nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '461700ffddee4ce5239e6dda1aad5503'; \nexport const Trending =()=>Axios.get( `${BASE_URL}trending/movie/day?api_key=${KEY}`);\nexport const Search=(movieName)=>Axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${movieName}`);\nexport const Details=(movieId)=>Axios.get( `${BASE_URL}movie/${movieId}?api_key=${KEY}`);\nexport const CastApi = (movieId) => Axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`);\nexport const ReviewsApi = (movieId) => Axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst MovieList = ({ movie,location}) => {\n return  ( <ul>\n                    {movie.map(({id,title,release_date}) => (\n                        <li key={id}>\n                            <Link to={{\n                                pathname: `movies/${id}`,\n                                state: {\n                                from:location\n                            }\n                            }}>{title}{release_date}</Link>\n                        </li>\n                    ))}\n                </ul>)\n}\nexport default MovieList;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__i6d6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__2bjdO\",\"SearchFormButton\":\"SearchForm_SearchFormButton__gUBuQ\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__3NOn9\",\"SearchFormInput\":\"SearchForm_SearchFormInput__15l4y\"};","import s from './Searchbar.module.css';\nimport f from './SearchForm.module.css';\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport * as API from '../../service/API/API';\n//import { Link} from 'react-router-dom';\nimport MovieList from '../../components/MovieList';\n\nclass MoviesPage extends Component {\n  \n     state = {\n         movieName: \" \",\n         movie:[],\n     }\n    componentDidMount() {\n        console.log('App componentDidMount');\n        const movie = sessionStorage.getItem(\"movieName\");\n        const parsedMovie = JSON.parse(movie);\n\n        if (parsedMovie) {\n          console.log('App componentDidMount movie');\n                this.setState({ movieName:parsedMovie});\n          }\n     \n    };\n  \n    async componentDidUpdate(prevProps, prevState) {\n        console.log('App componentDidUpdate');\n\n        if (this.state.movieName !== prevState.movieName) {\n         \n         localStorage.setItem('movieName', JSON.stringify(this.state.movieName));\n        }\n        ;\n        const response = await API.Search(this.state.movieName);\n        this.setState({movie:response.data.results } );\n    };\n\n    handleNameChange = e => {\n            this.setState({ movieName: e.currentTarget.value.toLowerCase() });\n        };\n\n    async handleSubmit(e){\n        e.preventDefault();\n\n        if (this.state.movieName.trim() === '') {\n           await  toast.error('Введите имя картинки');\n            return;\n        }\n       this.setState({ movieName: e.currentTarget.value.toLowerCase() }); \n        \n    };\n    \n    render() {\n        const { movie, movieName} = this.state;\n        const { handleSubmit, handleNameChange } = this;\n        const { location } = this.props;\n        return (\n      <>\n            <header className={s.Searchbar}>\n                <form className={f.SearchForm}\n                  \n                >\n                    <button type=\"button\" className={f.SearchFormButton} onSubmit={handleSubmit}  >\n                        <span className={f.SearchFormButtonLabel}>Search</span>\n                    </button>\n\n                    <input\n                        className={f.SearchFormInput}\n                        type=\"text\"\n                       //autoComplete=\"off\"\n                       autoFocus\n                       value={movieName}\n                       placeholder=\"Search movie\"\n                       onChange={handleNameChange}\n                    />\n                </form>\n            </header>\n            \n\n                {movie ? (\n                    <MovieList movie={movie} location={location}/>\n               ):(<h3>Отсутствует информиация</h3>) } \n         </>   \n        )\n    }\n}\n\nexport default MoviesPage;"],"sourceRoot":""}