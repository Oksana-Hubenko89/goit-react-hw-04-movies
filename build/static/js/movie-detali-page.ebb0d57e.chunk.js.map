{"version":3,"sources":["service/API/API.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Cast/Cast.js","components/Reviews/Reviews.js","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["BASE_URL","KEY","Trending","Axios","get","Search","movieName","Details","movieId","CastApi","ReviewsApi","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","cast","console","log","this","props","match","params","API","response","setState","data","onClick","map","id","name","character","profile_path","src","className","alt","Component","Reviews","results","author","content","MovieDetailsPage","overview","movie","poster_path","genres","release_date","title","vote_average","handleGoBack","history","location","from","url","type","exact","to","styles","link","activeClassName","activeLink","path","component"],"mappings":"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","file":"static/js/movie-detali-page.ebb0d57e.chunk.js","sourcesContent":["import Axios from 'axios';\n \nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '461700ffddee4ce5239e6dda1aad5503'; \nexport const Trending =()=>Axios.get( `${BASE_URL}trending/movie/day?api_key=${KEY}`);\nexport const Search=(movieName)=>Axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${movieName}`);\nexport const Details=(movieId)=>Axios.get( `${BASE_URL}movie/${movieId}?api_key=${KEY}`);\nexport const CastApi = (movieId) => Axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`);\nexport const ReviewsApi = (movieId) => Axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {Component} from 'react';\nimport * as API from '../../service/API/API';\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n  };\n   \n  async componentDidMount() {\n    console.log(this.props.match.params.movieId)\n    const { movieId } = this.props.match.params;\n    \n    const response = await API.CastApi(movieId);\n    this.setState({ ...response.data});\n    console.log(response.data)\n  }\n   \n  render() {\n    return (\n      <>\n         {this.state.cast.length>0?(\n                <ul onClick={this.props.onClick}>\n                    {this.state.cast.map(({id,name,character,profile_path}) => (\n                        <li key={id}>\n        <img src={profile_path ?\n          `https://image.tmdb.org/t/p/w300${profile_path}` : \"http://dummyimage.com/300x400/99cccc.gif&text=No+picture\"} className='imgCast' alt={name} />\n        <h2>{name} </h2>\n        <h2>Character: {character}</h2>\n                        </li>\n                    ))}\n                </ul>\n               ):(<h3>Отсутствует информиация</h3>)} \n      </>\n    )\n  }\n}\nexport default Cast;\n","import React, {Component} from 'react';\nimport * as API from '../../service/API/API';\n\nclass Reviews extends Component {\n  state = {\n      results: [],\n  };\n   \n  async componentDidMount() {\n    \n    const { movieId } = this.props.match.params;\n    \n    const response = await API.ReviewsApi(movieId)\n    this.setState({ ...response.data});\n    console.log(response.data.results)\n  }\n   \n  render() {\n    const { results } = this.state;\n    return (\n      <>\n               {results.length === 0 ? (<h3>Отсутствует информиация</h3>) :\n        (\n                <ul  onClick={this.props.onClick}>\n                    {results.map(({id,author,content}) => (\n                        <li key={id}>\n        <h2>Author: {author} </h2>\n        <p>Content: {content}</p>\n                        </li>\n                    ))}\n                </ul>\n               )} \n      </>\n    )\n  }\n}\nexport default Reviews;\n","import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../../components/Navigation/Navigation.module.css';\nimport { Route } from 'react-router-dom';\nimport Cast from '../../components/Cast';\nimport Reviews from '../../components/Reviews';\nimport * as API from '../../service/API/API';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    overview:null,\n    movie: null,\n    id: null,\n    poster_path: null,\n    genres: null,\n    release_date: null,\n    title: null,\n    cast: null,\n    vote_average:null,\n  };\n   \n  async componentDidMount() {\n       \n        const { movieId } = this.props.match.params;\n        const response = await API.Details(movieId)\n        this.setState({...response.data }); \n        \n    }\n      handleGoBack = () => {\n      this.props.history.push(this.props.location?.state?.from || \"/movies\")  \n    }\n  \n  render() {\n    const imagePath = \"http://dummyimage.com/300x400/99cccc.gif&text=No+picture\";\n    const { title, vote_average, overview, release_date, poster_path } = this.state;\n    const { url } = this.props.match;\n    return (\n      <>\n         <button type=\"button\" onClick={this.handleGoBack }>Go back</button>\n        <img src={poster_path ?\n          `https://image.tmdb.org/t/p/w300${poster_path}` : imagePath} className='singleMovie-img' alt={title} />\n        <h2>{title} {release_date}</h2>\n        <p></p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>User score: {vote_average}</h3>\n        <h3>Genres</h3>\n        {this.state.genres && (\n          this.state.genres.map(({ id, name })=>\n        (<li key={id}>{name}</li>)\n          ))\n        }\n        \n        <div>\n          <hr/>\n           <p>Additional information</p>\n      <NavLink\n        exact\n        to={`${url}/cast`}\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Cast\n      </NavLink>\n\n      <NavLink\n        to={`${url}/reviews`}\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n              Reviews\n      </NavLink>\n        <hr/>    \n        </div>\n        \n        <Route path=\"/movies/:movieId/cast\" component={Cast} {...this.props}/>\n        <Route path=\"/movies/:movieId/reviews\"  component={Reviews} {...this.props}/>\n        \n      </>\n    )\n  }\n}\n\nexport default MovieDetailsPage;"],"sourceRoot":""}